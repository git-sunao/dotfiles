#!/usr/bin/env python
"""
This is to solve the problems in the bib file generated by Papers application.

Author: Sunao Sugiyama
"""
import bibtexparser
import argparse

def problem1(bib_database):
    name = 'Slepian.Eisenstein.2015'
    bib_database.entries_dict[name]['title'] = "{{Computing the Three-Point Correlation Function of Galaxies in O(N 2) Time}"
    print('Solved problem 1')
    return bib_database

def problem2(bib_database):
    # replace the ID of Cheng.Bruna.2020
    old_ID = '(程思浩).Bruna.2020'
    new_ID = 'Cheng.Bruna.2020'
    bib_database.entries_dict[old_ID]['ID'] = new_ID
    # remove the chinese characters in author's names
    name = 'Cheng.Bruna.2020'
    replace_with = {'(程思浩), ':'', '(丁源森), ':''}
    for key, item in replace_with.items():
        text = bib_database.entries_dict[name]['author'].replace(key, item)
        bib_database.entries_dict[name]['author'] = text
    print('Solved problem 2')
    return bib_database

def problem3(bib_database):
    replace_with = {'é':'e', 'ollaboration)': 'ollaboration', 'ü':'u', 'ä':'a', 'ü':'u'}
    N = 0
    for key in bib_database.entries_dict.keys():
        key_now = key
        for v, v2 in replace_with.items():
            if v in key_now:
                N += 1
                key_new = key_now.replace(v,v2)
                bib_database.entries_dict[key_now]['ID'] = key_new
                key_now = key_new
    print('Solved problem 3:' + f'replaced in {N} entries')
    return bib_database

def problem4(bib_database):
    replace_with = {
        'ő': '{\\H{o}}',
        'Ő': '{\\H{O}}',
        'á': '{\\\'a}',
        'Á': '{\\\'A}',
        'é': '{\\\'e}',
        'É': '{\\\'E}',
        'í': '{\\\'i}',
        'Í': '{\\\'I}',
        'ó': '{\\\'o}',
        'Ó': '{\\\'O}',
        'ú': '{\\\'u}',
        'Ú': '{\\\'U}',
        'ü': '{\\"u}',
        'Ü': '{\\"U}',
        'ö': '{\\"o}',
        'Ö': '{\\"O}'
    }
    for name in bib_database.entries_dict.keys():
        text = bib_database.entries_dict[name]['author']
        for v, v2 in replace_with.items():
            text = text.replace(v, v2)
        bib_database.entries_dict[name]['author'] = text
    print('Solved problem 4')
    return bib_database

def wrap(bib_database, solver):
    try:
        return solver(bib_database)
    except Exception as e:
        print('Error', e)
        return bib_database

# Define a function to remove the "title" entry from each BibTeX entry
def remove_title(bib_database, keys):
    for key in keys:
        print('removing {} from all entries'.format(key))
        for entry in bib_database.entries:
            if key in entry:
                del entry[key]

def main(filename, overwrie=False):
    # Load the .bib file
    with open(filename, 'r', encoding='utf-8') as bibfile:
        bib_database = bibtexparser.load(bibfile)
    
    # solve problems
    bib_database = wrap(bib_database, problem1)
    bib_database = wrap(bib_database, problem2)
    bib_database = wrap(bib_database, problem3)
    bib_database = wrap(bib_database, problem4)

    # Save the modified .bib file
    filename_out = filename if overwrie else filename.replace('.bib', '-solve.bib')
    with open(filename_out, 'w', encoding='utf-8') as output_bibfile:
        bibtexparser.dump(bib_database, output_bibfile)

    print("Title entries removed and saved to '{}'.".format(filename_out))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("file", type=str, help="bib file name")
    parser.add_argument("-o","--overwrite", help="overwrite the original file", action="store_true")
    opts = parser.parse_args()

    main(opts.file, opts.overwrite)
